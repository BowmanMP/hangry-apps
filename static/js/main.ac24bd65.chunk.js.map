{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","onKeyPress","event","which","handleSearch","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSortByChange","sortByOptions","sortByOption","setState","target","value","preventDefault","alert","searchYelp","Object","keys","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","type","required","Yelp","fetch","headers","Authorization","process","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac24bd65.chunk.js","sourcesContent":["import React from 'react';\nimport './Business.css';\n\nclass Business extends React.Component {\n    render() {\n        return (\n            <div className=\"Business\">\n                <div className=\"image-container\">\n                    <img src={this.props.business.imageSrc} alt=''/>\n                </div>\n                <h2>{this.props.business.name}</h2>\n                <div className=\"Business-information\">\n                    <div className=\"Business-address\">\n                        <p>{this.props.business.address}</p>\n                        <p>{this.props.business.city}</p>\n                        <p>{this.props.business.state}, {this.props.business.zipCode}</p>\n                    </div>\n                    <div className=\"Business-reviews\">\n                        <h3>{this.props.business.category.toUpperCase()}</h3>\n                        <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\n                        <p>{`${this.props.business.reviewCount} reviews`}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\nimport Business from  '../Business/Business';\n\nclass BusinessList extends React.Component {\n    render () {\n        return (\n            <div className=\"BusinessList\">\n               {\n                   this.props.businesses.map(business => {\n                       return <Business business={business} key={business.id} />\n                   })\n                }\n            </div>\n        );\n    }\n}\n\nexport default BusinessList;","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            term: '',\n            location: '',\n            sortBy: 'best_match'\n        };\n        this.handleTermChange = this.handleTermChange.bind(this);\n        this.handleLocationChange=this.handleLocationChange.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleSortByChange = this.handleSortByChange.bind(this);\n\n        this.sortByOptions = {\n            'Best Match': 'best_match',\n            'Highest Rated': 'rating',\n            'Most Reviewed': 'review_count'\n        };\n    }\n    getSortByClass(sortByOption){\n        if (this.state.sortBy === sortByOption) {\n            return 'active';\n        } else {\n            return '';\n        }\n    }\n    handleSortByChange(sortByOption) {\n        this.setState({\n            sortBy: sortByOption\n        });\n    }\n    handleTermChange(event) {\n        this.setState({\n            term: event.target.value\n        });\n    }\n    handleLocationChange(event) {\n        this.setState({\n            location: event.target.value\n        });\n    }\n    handleSearch(event) {\n        event.preventDefault();\n        if (\n            this.state.term === '' || this.state.location === ''\n        ) {\n            alert('Please fill in both search fields.')\n        } else {\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy)\n        }\n    }\n\n    onKeyPress = (event) => {\n        if(event.which === 13) {\n          this.handleSearch(event);\n        }\n    }    \n\n    renderSortByOptions() {\n        return Object.keys(this.sortByOptions).map(sortByOption => {\n            let sortByOptionValue = this.sortByOptions[sortByOption];\n            return (<li key={sortByOptionValue} className={this.getSortByClass(sortByOptionValue)} onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}</li>);\n        });\n    }\n    render () {\n        return (\n            <div className=\"SearchBar\" searchYelp={this.searchYelp}>\n                <div className=\"SearchBar-sort-options\">\n                    <ul>\n                    {this.renderSortByOptions()}\n                    </ul>\n                </div>\n                <form className=\"SearchBar-fields\">\n                    <input placeholder=\"Search Restaurants (i.e. Mexican / Chick-fil-a)\" onChange={this.handleTermChange} onKeyPress={this.onKeyPress} />\n                    <input type=\"text\" placeholder=\"City, State\" onChange={this.handleLocationChange} onKeyPress={this.onKeyPress} required/>\n                </form>\n                <span className=\"SearchBar-submit\">\n                    <input type=\"submit\" onClick={this.handleSearch} value=\"Let's Go\" />\n                </span>\n            </div>\n        );\n    }\n}\nexport default SearchBar;","const apiKey = process.env.REACT_APP_YELP_API_KEY;\n\nconst Yelp = {\n    searchYelp (term, location, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n            headers: {\n                Authorization: `Bearer ${apiKey}`\n            }\n        })\n        .then(response => {\n            return response.json();\n        })\n        .then(jsonResponse => {\n            if (jsonResponse.businesses) {\n                return jsonResponse.businesses.map(business => ({\n                        id: business.id,\n                        imageSrc: business.image_url,\n                        name: business.name,\n                        address: business.location.address1,\n                        city: business.location.city,\n                        state: business.location.state,\n                        zipCode: business.location.zip_code,\n                        category: business.categories[0].title,\n                        rating: business.rating,\n                        reviewCount: business.review_count\n                }));\n            }\n        });\n    }\n};\n\nexport default Yelp;","import React from 'react';\n//import logo from '../../../src/logo.svg';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: []\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy) {\n    Yelp.searchYelp(term, location, sortBy).then((businesses) => {\n      this.setState({\n        businesses: businesses\n      });\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Hangry</h1>\n        <SearchBar searchYelp={this.searchYelp} />\n        <BusinessList businesses={this.state.businesses} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a functions\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}